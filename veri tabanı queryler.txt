USE vtysproje; 
CREATE TABLE grup_yoneticisi (
    grup_yoneticisi_no INT AUTO_INCREMENT PRIMARY KEY,
    grup_yoneticisi_ad_soyad VARCHAR(255),
    sicil_no VARCHAR(255)
);

CREATE TABLE takim_lideri (
    takim_lideri_no INT AUTO_INCREMENT PRIMARY KEY,
    takim_lideri_ad_soyad VARCHAR(255),
    sicil_no VARCHAR(255),
    grup_yoneticisi_no INT,
    FOREIGN KEY (grup_yoneticisi_no) REFERENCES grup_yoneticisi(grup_yoneticisi_no)
);

CREATE TABLE gorusme (
    gorusme_no INT AUTO_INCREMENT PRIMARY KEY,
    musteri_id INT,
    musteri_ad_soyad VARCHAR(255),
    gorusme_konusu VARCHAR(255),
    gorusme_tarihi DATE,
    gorusme_baslama_saati TIME,
    gorusme_bitis_saati TIME,
    gorusme_durum VARCHAR(255)
);

CREATE TABLE itirazlar (
    itiraz_no INT AUTO_INCREMENT PRIMARY KEY,
    musteri_temsilcisi_no INT,
    musteri_temsilcisi_ad_soyad VARCHAR(255),
    itiraz_aciklamasi VARCHAR(255),
    itiraz_tarihi DATE
);

CREATE TABLE primler (
    prim_no INT AUTO_INCREMENT PRIMARY KEY,
    prim_miktari INT,
    prim_tarihi DATE
);

CREATE TABLE musteri_temsilcisi (
    musteri_temsilcisi_no INT AUTO_INCREMENT PRIMARY KEY,
    musteri_temsilcisi_ad_soyad VARCHAR(255),
    gorusme_no INT,
    itiraz_no INT,
    prim_no INT,
    sicil_no VARCHAR(255),
    takim_lideri_no INT,
    FOREIGN KEY (gorusme_no) REFERENCES gorusme(gorusme_no),
    FOREIGN KEY (itiraz_no) REFERENCES itirazlar(itiraz_no),
    FOREIGN KEY (prim_no) REFERENCES primler(prim_no),
    FOREIGN KEY (takim_lideri_no) REFERENCES takim_lideri(takim_lideri_no)
);

CREATE TABLE kullanicilar (
    kullanici_id INT AUTO_INCREMENT PRIMARY KEY,
    kullanici_adi VARCHAR(255),
    sifre VARCHAR(255),
    rol ENUM('musteri_temsilcisi', 'takim_lideri', 'grup_yoneticisi'),
    temsilci_no INT,
    takim_lideri_no INT,
    grup_yoneticisi_no INT,
    FOREIGN KEY (temsilci_no) REFERENCES musteri_temsilcisi(musteri_temsilcisi_no),
    FOREIGN KEY (takim_lideri_no) REFERENCES takim_lideri(takim_lideri_no),
    FOREIGN KEY (grup_yoneticisi_no) REFERENCES grup_yoneticisi(grup_yoneticisi_no)
);

CREATE TABLE mailler (
    mail VARCHAR(255) PRIMARY KEY,
    grup_yoneticisi_no INT,
    FOREIGN KEY (grup_yoneticisi_no) REFERENCES grup_yoneticisi(grup_yoneticisi_no)
);
------------------------------------------------------------------------------------------------------------------------------------
#GÖRÜŞME EKLEYEN STORED PROCEDURE#

USE vtysproje;

DELIMITER //

CREATE PROCEDURE sp_AddGorusme(
    IN p_musteri_id INT,
    IN p_musteri_ad_soyad VARCHAR(255),
    IN p_gorusme_konusu VARCHAR(50),
    IN p_gorusme_tarihi DATE,
    IN p_baslama_saati TIME,
    IN p_bitis_saati TIME,
    IN p_gorusme_durum VARCHAR(50)
)
BEGIN
    INSERT INTO gorusme (musteri_id, musteri_ad_soyad, gorusme_konusu, gorusme_tarihi, gorusme_baslama_saati, gorusme_bitis_saati, gorusme_durum)
    VALUES (p_musteri_id, p_musteri_ad_soyad, p_gorusme_konusu, p_gorusme_tarihi, p_baslama_saati, p_bitis_saati, p_gorusme_durum);
END //

DELIMITER ;
------------------------------------------------------------------------------------------------------------------------------------
#PRİM HESAPLAYAN FONKSYİON#

DELIMITER //

CREATE FUNCTION aylik_prim_hesapla(musteri_temsilcisi_id INT, baslangic_tarihi DATE, bitis_tarihi DATE) RETURNS INT
DETERMINISTIC
READS SQL DATA
BEGIN
    DECLARE daily_calls INT;
    DECLARE short_calls INT;
    DECLARE total_prim INT;

    -- Günlük çağrı sayısını hesapla
    SELECT COUNT(*) INTO daily_calls
    FROM gorusme
    WHERE gorusme_tarihi BETWEEN baslangic_tarihi AND bitis_tarihi
    AND musteri_temsilcisi_no = musteri_temsilcisi_id;

    -- 5 dakikadan daha kısa görüşme sayısını hesapla
    SELECT COUNT(*) INTO short_calls
    FROM gorusme
    WHERE gorusme_tarihi BETWEEN baslangic_tarihi AND bitis_tarihi
    AND musteri_temsilcisi_no = musteri_temsilcisi_id
    AND TIME_TO_SEC(TIMEDIFF(gorusme_bitis_saati, gorusme_baslama_saati)) / 60 < 5;

    -- Prim hesaplama
    IF daily_calls < 100 THEN
        SET total_prim = 0; -- Prim hak ediş yok
    ELSEIF daily_calls >= 100 AND daily_calls < 200 THEN
        SET total_prim = 5000 + (short_calls * 1.25);
    ELSE
        SET total_prim = 5000 + (short_calls * 2);
    END IF;

    RETURN total_prim;
END //

DELIMITER ;

------------------------------------------------------------------------------------------------------------------------------------
#İTİRAZ OLUŞTURAN STORED PROCEDURE#

DELIMITER //

CREATE PROCEDURE sp_ItirazOlustur(
    IN p_temsilci_no INT,
    IN p_itiraz_aciklamasi VARCHAR(255),
    IN p_itiraz_tarihi DATE
)
BEGIN
    INSERT INTO itirazlar (musteri_temsilcisi_no, itiraz_aciklamasi, itiraz_tarihi)
    VALUES (p_temsilci_no, p_itiraz_aciklamasi, p_itiraz_tarihi);
    
END //

DELIMITER ;
